/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Xiangqi;
import Xiangqi.Master;
import Piezas.Piezas;
import java.awt.Color;
import java.util.HashMap;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

import Piezas.Caballo;
import Piezas.Ca√±on;
import Piezas.Elefante;
import Piezas.Oficial;
import Piezas.Peon;
import Piezas.Rey;
import Piezas.Torre;

/**
 *
 * @author Hp
 */
public class Tablero_Xiangqi extends javax.swing.JFrame {

public Master mas;
    private boolean primerClick = false;
    private JButton Boton1;
    private int xInicial, yInicial;
    private Piezas[][] tablero = new Piezas[10][9];

    public Tablero_Xiangqi(Master mast) {
        initComponents();
        inicarTablero();
        this.setTitle("Xiangqui");
        this.setLocationRelativeTo(null);
        mas=mast;
        
       JugadorRojo.setText("Jugador Rojo: "+mas.UsuarioActual.getUser());
       JugadorNegro.setText("Jugador Negro: "+mas.UsuarioRival.getUser());
       lblTurno.setText("Rojo");
       lblTurno.setForeground(Color.RED);
       mas.UsuarioActual.Jugar(); mas.UsuarioRival.Jugar();
       
       
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        A10 = new javax.swing.JButton();
        C10 = new javax.swing.JButton();
        B10 = new javax.swing.JButton();
        D10 = new javax.swing.JButton();
        E10 = new javax.swing.JButton();
        F10 = new javax.swing.JButton();
        G10 = new javax.swing.JButton();
        H10 = new javax.swing.JButton();
        I10 = new javax.swing.JButton();
        A9 = new javax.swing.JButton();
        B9 = new javax.swing.JButton();
        C9 = new javax.swing.JButton();
        D9 = new javax.swing.JButton();
        E9 = new javax.swing.JButton();
        F9 = new javax.swing.JButton();
        G9 = new javax.swing.JButton();
        H9 = new javax.swing.JButton();
        I9 = new javax.swing.JButton();
        A8 = new javax.swing.JButton();
        B8 = new javax.swing.JButton();
        C8 = new javax.swing.JButton();
        D8 = new javax.swing.JButton();
        E8 = new javax.swing.JButton();
        F8 = new javax.swing.JButton();
        G8 = new javax.swing.JButton();
        H8 = new javax.swing.JButton();
        I8 = new javax.swing.JButton();
        A7 = new javax.swing.JButton();
        B7 = new javax.swing.JButton();
        C7 = new javax.swing.JButton();
        D7 = new javax.swing.JButton();
        E7 = new javax.swing.JButton();
        F7 = new javax.swing.JButton();
        G7 = new javax.swing.JButton();
        H7 = new javax.swing.JButton();
        I7 = new javax.swing.JButton();
        A6 = new javax.swing.JButton();
        B6 = new javax.swing.JButton();
        C6 = new javax.swing.JButton();
        D6 = new javax.swing.JButton();
        E6 = new javax.swing.JButton();
        F6 = new javax.swing.JButton();
        G6 = new javax.swing.JButton();
        H6 = new javax.swing.JButton();
        I6 = new javax.swing.JButton();
        A5 = new javax.swing.JButton();
        B5 = new javax.swing.JButton();
        C5 = new javax.swing.JButton();
        D5 = new javax.swing.JButton();
        E5 = new javax.swing.JButton();
        F5 = new javax.swing.JButton();
        G5 = new javax.swing.JButton();
        H5 = new javax.swing.JButton();
        I5 = new javax.swing.JButton();
        A4 = new javax.swing.JButton();
        B4 = new javax.swing.JButton();
        A3 = new javax.swing.JButton();
        B3 = new javax.swing.JButton();
        A2 = new javax.swing.JButton();
        B2 = new javax.swing.JButton();
        C2 = new javax.swing.JButton();
        C3 = new javax.swing.JButton();
        C4 = new javax.swing.JButton();
        D4 = new javax.swing.JButton();
        D3 = new javax.swing.JButton();
        D2 = new javax.swing.JButton();
        E2 = new javax.swing.JButton();
        E3 = new javax.swing.JButton();
        E4 = new javax.swing.JButton();
        F4 = new javax.swing.JButton();
        F3 = new javax.swing.JButton();
        F2 = new javax.swing.JButton();
        F1 = new javax.swing.JButton();
        E1 = new javax.swing.JButton();
        D1 = new javax.swing.JButton();
        C1 = new javax.swing.JButton();
        B1 = new javax.swing.JButton();
        A1 = new javax.swing.JButton();
        G1 = new javax.swing.JButton();
        G2 = new javax.swing.JButton();
        G3 = new javax.swing.JButton();
        G4 = new javax.swing.JButton();
        H4 = new javax.swing.JButton();
        H3 = new javax.swing.JButton();
        H2 = new javax.swing.JButton();
        H1 = new javax.swing.JButton();
        I1 = new javax.swing.JButton();
        I2 = new javax.swing.JButton();
        I3 = new javax.swing.JButton();
        I4 = new javax.swing.JButton();
        JugadorNegro = new javax.swing.JLabel();
        JugadorRojo = new javax.swing.JLabel();
        BtnRendirse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblTurno = new javax.swing.JLabel();
        pruebalbl = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        A10.setBackground(new java.awt.Color(128, 65, 2));
        A10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TorreNegra.png"))); // NOI18N
        A10.setBorder(new javax.swing.border.MatteBorder(null));
        A10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A10ActionPerformed(evt);
            }
        });

        C10.setBackground(new java.awt.Color(128, 65, 2));
        C10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ElefanteNegro.png"))); // NOI18N
        C10.setBorder(new javax.swing.border.MatteBorder(null));
        C10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C10ActionPerformed(evt);
            }
        });

        B10.setBackground(new java.awt.Color(198, 134, 66));
        B10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CaballoNegro.png"))); // NOI18N
        B10.setBorder(new javax.swing.border.MatteBorder(null));
        B10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B10ActionPerformed(evt);
            }
        });

        D10.setBackground(new java.awt.Color(133, 88, 39));
        D10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/OficialNegro.png"))); // NOI18N
        D10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D10ActionPerformed(evt);
            }
        });

        E10.setBackground(new java.awt.Color(80, 40, 1));
        E10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ReyNegro.png"))); // NOI18N
        E10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E10ActionPerformed(evt);
            }
        });

        F10.setBackground(new java.awt.Color(133, 88, 39));
        F10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/OficialNegro.png"))); // NOI18N
        F10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F10ActionPerformed(evt);
            }
        });

        G10.setBackground(new java.awt.Color(128, 65, 2));
        G10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ElefanteNegro.png"))); // NOI18N
        G10.setBorder(new javax.swing.border.MatteBorder(null));
        G10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G10ActionPerformed(evt);
            }
        });

        H10.setBackground(new java.awt.Color(198, 134, 66));
        H10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CaballoNegro.png"))); // NOI18N
        H10.setBorder(new javax.swing.border.MatteBorder(null));
        H10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H10ActionPerformed(evt);
            }
        });

        I10.setBackground(new java.awt.Color(128, 65, 2));
        I10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TorreNegra.png"))); // NOI18N
        I10.setBorder(new javax.swing.border.MatteBorder(null));
        I10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I10ActionPerformed(evt);
            }
        });

        A9.setBackground(new java.awt.Color(198, 134, 66));
        A9.setBorder(new javax.swing.border.MatteBorder(null));
        A9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A9ActionPerformed(evt);
            }
        });

        B9.setBackground(new java.awt.Color(128, 65, 2));
        B9.setBorder(new javax.swing.border.MatteBorder(null));
        B9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B9ActionPerformed(evt);
            }
        });

        C9.setBackground(new java.awt.Color(198, 134, 66));
        C9.setBorder(new javax.swing.border.MatteBorder(null));
        C9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C9ActionPerformed(evt);
            }
        });

        D9.setBackground(new java.awt.Color(80, 40, 1));
        D9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D9ActionPerformed(evt);
            }
        });

        E9.setBackground(new java.awt.Color(133, 88, 39));
        E9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E9ActionPerformed(evt);
            }
        });

        F9.setBackground(new java.awt.Color(80, 40, 1));
        F9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F9ActionPerformed(evt);
            }
        });

        G9.setBackground(new java.awt.Color(198, 134, 66));
        G9.setBorder(new javax.swing.border.MatteBorder(null));
        G9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G9ActionPerformed(evt);
            }
        });

        H9.setBackground(new java.awt.Color(128, 65, 2));
        H9.setBorder(new javax.swing.border.MatteBorder(null));
        H9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H9ActionPerformed(evt);
            }
        });

        I9.setBackground(new java.awt.Color(198, 134, 66));
        I9.setBorder(new javax.swing.border.MatteBorder(null));
        I9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I9ActionPerformed(evt);
            }
        });

        A8.setBackground(new java.awt.Color(128, 65, 2));
        A8.setBorder(new javax.swing.border.MatteBorder(null));
        A8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A8ActionPerformed(evt);
            }
        });

        B8.setBackground(new java.awt.Color(198, 134, 66));
        B8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ca√±onNegro.png"))); // NOI18N
        B8.setBorder(new javax.swing.border.MatteBorder(null));
        B8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B8ActionPerformed(evt);
            }
        });

        C8.setBackground(new java.awt.Color(128, 65, 2));
        C8.setBorder(new javax.swing.border.MatteBorder(null));
        C8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C8ActionPerformed(evt);
            }
        });

        D8.setBackground(new java.awt.Color(133, 88, 39));
        D8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D8ActionPerformed(evt);
            }
        });

        E8.setBackground(new java.awt.Color(80, 40, 1));
        E8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E8ActionPerformed(evt);
            }
        });

        F8.setBackground(new java.awt.Color(133, 88, 39));
        F8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F8ActionPerformed(evt);
            }
        });

        G8.setBackground(new java.awt.Color(128, 65, 2));
        G8.setBorder(new javax.swing.border.MatteBorder(null));
        G8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G8ActionPerformed(evt);
            }
        });

        H8.setBackground(new java.awt.Color(198, 134, 66));
        H8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ca√±onNegro.png"))); // NOI18N
        H8.setBorder(new javax.swing.border.MatteBorder(null));
        H8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H8ActionPerformed(evt);
            }
        });

        I8.setBackground(new java.awt.Color(128, 65, 2));
        I8.setBorder(new javax.swing.border.MatteBorder(null));
        I8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I8ActionPerformed(evt);
            }
        });

        A7.setBackground(new java.awt.Color(198, 134, 66));
        A7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoNegro.png"))); // NOI18N
        A7.setBorder(new javax.swing.border.MatteBorder(null));
        A7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A7ActionPerformed(evt);
            }
        });

        B7.setBackground(new java.awt.Color(128, 65, 2));
        B7.setBorder(new javax.swing.border.MatteBorder(null));
        B7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B7ActionPerformed(evt);
            }
        });

        C7.setBackground(new java.awt.Color(198, 134, 66));
        C7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoNegro.png"))); // NOI18N
        C7.setBorder(new javax.swing.border.MatteBorder(null));
        C7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C7ActionPerformed(evt);
            }
        });

        D7.setBackground(new java.awt.Color(128, 65, 2));
        D7.setBorder(new javax.swing.border.MatteBorder(null));
        D7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D7ActionPerformed(evt);
            }
        });

        E7.setBackground(new java.awt.Color(198, 134, 66));
        E7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoNegro.png"))); // NOI18N
        E7.setBorder(new javax.swing.border.MatteBorder(null));
        E7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E7ActionPerformed(evt);
            }
        });

        F7.setBackground(new java.awt.Color(128, 65, 2));
        F7.setBorder(new javax.swing.border.MatteBorder(null));
        F7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F7ActionPerformed(evt);
            }
        });

        G7.setBackground(new java.awt.Color(198, 134, 66));
        G7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoNegro.png"))); // NOI18N
        G7.setBorder(new javax.swing.border.MatteBorder(null));
        G7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G7ActionPerformed(evt);
            }
        });

        H7.setBackground(new java.awt.Color(128, 65, 2));
        H7.setBorder(new javax.swing.border.MatteBorder(null));
        H7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H7ActionPerformed(evt);
            }
        });

        I7.setBackground(new java.awt.Color(198, 134, 66));
        I7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoNegro.png"))); // NOI18N
        I7.setBorder(new javax.swing.border.MatteBorder(null));
        I7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I7ActionPerformed(evt);
            }
        });

        A6.setBackground(new java.awt.Color(128, 65, 2));
        A6.setBorder(new javax.swing.border.MatteBorder(null));
        A6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A6ActionPerformed(evt);
            }
        });

        B6.setBackground(new java.awt.Color(198, 134, 66));
        B6.setBorder(new javax.swing.border.MatteBorder(null));
        B6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B6ActionPerformed(evt);
            }
        });

        C6.setBackground(new java.awt.Color(128, 65, 2));
        C6.setBorder(new javax.swing.border.MatteBorder(null));
        C6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C6ActionPerformed(evt);
            }
        });

        D6.setBackground(new java.awt.Color(198, 134, 66));
        D6.setBorder(new javax.swing.border.MatteBorder(null));
        D6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D6ActionPerformed(evt);
            }
        });

        E6.setBackground(new java.awt.Color(128, 65, 2));
        E6.setBorder(new javax.swing.border.MatteBorder(null));
        E6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E6ActionPerformed(evt);
            }
        });

        F6.setBackground(new java.awt.Color(198, 134, 66));
        F6.setBorder(new javax.swing.border.MatteBorder(null));
        F6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F6ActionPerformed(evt);
            }
        });

        G6.setBackground(new java.awt.Color(128, 65, 2));
        G6.setBorder(new javax.swing.border.MatteBorder(null));
        G6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G6ActionPerformed(evt);
            }
        });

        H6.setBackground(new java.awt.Color(198, 134, 66));
        H6.setBorder(new javax.swing.border.MatteBorder(null));
        H6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H6ActionPerformed(evt);
            }
        });

        I6.setBackground(new java.awt.Color(128, 65, 2));
        I6.setBorder(new javax.swing.border.MatteBorder(null));
        I6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I6ActionPerformed(evt);
            }
        });

        A5.setBackground(new java.awt.Color(128, 65, 2));
        A5.setBorder(new javax.swing.border.MatteBorder(null));
        A5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A5ActionPerformed(evt);
            }
        });

        B5.setBackground(new java.awt.Color(198, 134, 66));
        B5.setBorder(new javax.swing.border.MatteBorder(null));
        B5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B5ActionPerformed(evt);
            }
        });

        C5.setBackground(new java.awt.Color(128, 65, 2));
        C5.setBorder(new javax.swing.border.MatteBorder(null));
        C5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C5ActionPerformed(evt);
            }
        });

        D5.setBackground(new java.awt.Color(198, 134, 66));
        D5.setBorder(new javax.swing.border.MatteBorder(null));
        D5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D5ActionPerformed(evt);
            }
        });

        E5.setBackground(new java.awt.Color(128, 65, 2));
        E5.setBorder(new javax.swing.border.MatteBorder(null));
        E5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E5ActionPerformed(evt);
            }
        });

        F5.setBackground(new java.awt.Color(198, 134, 66));
        F5.setBorder(new javax.swing.border.MatteBorder(null));
        F5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F5ActionPerformed(evt);
            }
        });

        G5.setBackground(new java.awt.Color(128, 65, 2));
        G5.setBorder(new javax.swing.border.MatteBorder(null));
        G5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G5ActionPerformed(evt);
            }
        });

        H5.setBackground(new java.awt.Color(198, 134, 66));
        H5.setBorder(new javax.swing.border.MatteBorder(null));
        H5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H5ActionPerformed(evt);
            }
        });

        I5.setBackground(new java.awt.Color(128, 65, 2));
        I5.setBorder(new javax.swing.border.MatteBorder(null));
        I5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I5ActionPerformed(evt);
            }
        });

        A4.setBackground(new java.awt.Color(198, 134, 66));
        A4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoRojo.png"))); // NOI18N
        A4.setBorder(new javax.swing.border.MatteBorder(null));
        A4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A4ActionPerformed(evt);
            }
        });

        B4.setBackground(new java.awt.Color(128, 65, 2));
        B4.setBorder(new javax.swing.border.MatteBorder(null));
        B4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B4ActionPerformed(evt);
            }
        });

        A3.setBackground(new java.awt.Color(128, 65, 2));
        A3.setBorder(new javax.swing.border.MatteBorder(null));
        A3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A3ActionPerformed(evt);
            }
        });

        B3.setBackground(new java.awt.Color(198, 134, 66));
        B3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ca√±onRojo.png"))); // NOI18N
        B3.setBorder(new javax.swing.border.MatteBorder(null));
        B3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B3ActionPerformed(evt);
            }
        });

        A2.setBackground(new java.awt.Color(198, 134, 66));
        A2.setBorder(new javax.swing.border.MatteBorder(null));
        A2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A2ActionPerformed(evt);
            }
        });

        B2.setBackground(new java.awt.Color(128, 65, 2));
        B2.setBorder(new javax.swing.border.MatteBorder(null));
        B2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B2ActionPerformed(evt);
            }
        });

        C2.setBackground(new java.awt.Color(198, 134, 66));
        C2.setBorder(new javax.swing.border.MatteBorder(null));
        C2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C2ActionPerformed(evt);
            }
        });

        C3.setBackground(new java.awt.Color(128, 65, 2));
        C3.setBorder(new javax.swing.border.MatteBorder(null));
        C3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C3ActionPerformed(evt);
            }
        });

        C4.setBackground(new java.awt.Color(198, 134, 66));
        C4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoRojo.png"))); // NOI18N
        C4.setBorder(new javax.swing.border.MatteBorder(null));
        C4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C4ActionPerformed(evt);
            }
        });

        D4.setBackground(new java.awt.Color(128, 65, 2));
        D4.setBorder(new javax.swing.border.MatteBorder(null));
        D4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D4ActionPerformed(evt);
            }
        });

        D3.setBackground(new java.awt.Color(133, 88, 39));
        D3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D3ActionPerformed(evt);
            }
        });

        D2.setBackground(new java.awt.Color(80, 40, 1));
        D2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D2ActionPerformed(evt);
            }
        });

        E2.setBackground(new java.awt.Color(133, 88, 39));
        E2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E2ActionPerformed(evt);
            }
        });

        E3.setBackground(new java.awt.Color(80, 40, 1));
        E3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E3ActionPerformed(evt);
            }
        });

        E4.setBackground(new java.awt.Color(198, 134, 66));
        E4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoRojo.png"))); // NOI18N
        E4.setBorder(new javax.swing.border.MatteBorder(null));
        E4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E4ActionPerformed(evt);
            }
        });

        F4.setBackground(new java.awt.Color(128, 65, 2));
        F4.setBorder(new javax.swing.border.MatteBorder(null));
        F4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F4ActionPerformed(evt);
            }
        });

        F3.setBackground(new java.awt.Color(133, 88, 39));
        F3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F3ActionPerformed(evt);
            }
        });

        F2.setBackground(new java.awt.Color(80, 40, 1));
        F2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F2ActionPerformed(evt);
            }
        });

        F1.setBackground(new java.awt.Color(133, 88, 39));
        F1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/OficialRojo.png"))); // NOI18N
        F1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        F1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F1ActionPerformed(evt);
            }
        });

        E1.setBackground(new java.awt.Color(80, 40, 1));
        E1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ReyRojo.png"))); // NOI18N
        E1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        E1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                E1ActionPerformed(evt);
            }
        });

        D1.setBackground(new java.awt.Color(133, 88, 39));
        D1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/OficialRojo.png"))); // NOI18N
        D1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        D1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                D1ActionPerformed(evt);
            }
        });

        C1.setBackground(new java.awt.Color(128, 65, 2));
        C1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ElefanteRojo.png"))); // NOI18N
        C1.setBorder(new javax.swing.border.MatteBorder(null));
        C1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C1ActionPerformed(evt);
            }
        });

        B1.setBackground(new java.awt.Color(198, 134, 66));
        B1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CaballoRojo.png"))); // NOI18N
        B1.setBorder(new javax.swing.border.MatteBorder(null));
        B1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B1ActionPerformed(evt);
            }
        });

        A1.setBackground(new java.awt.Color(128, 65, 2));
        A1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TorreRoja.png"))); // NOI18N
        A1.setBorder(new javax.swing.border.MatteBorder(null));
        A1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                A1ActionPerformed(evt);
            }
        });

        G1.setBackground(new java.awt.Color(128, 65, 2));
        G1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/ElefanteRojo.png"))); // NOI18N
        G1.setBorder(new javax.swing.border.MatteBorder(null));
        G1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G1ActionPerformed(evt);
            }
        });

        G2.setBackground(new java.awt.Color(198, 134, 66));
        G2.setBorder(new javax.swing.border.MatteBorder(null));
        G2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G2ActionPerformed(evt);
            }
        });

        G3.setBackground(new java.awt.Color(128, 65, 2));
        G3.setBorder(new javax.swing.border.MatteBorder(null));
        G3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G3ActionPerformed(evt);
            }
        });

        G4.setBackground(new java.awt.Color(198, 134, 66));
        G4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoRojo.png"))); // NOI18N
        G4.setBorder(new javax.swing.border.MatteBorder(null));
        G4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                G4ActionPerformed(evt);
            }
        });

        H4.setBackground(new java.awt.Color(128, 65, 2));
        H4.setBorder(new javax.swing.border.MatteBorder(null));
        H4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H4ActionPerformed(evt);
            }
        });

        H3.setBackground(new java.awt.Color(198, 134, 66));
        H3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ca√±onRojo.png"))); // NOI18N
        H3.setBorder(new javax.swing.border.MatteBorder(null));
        H3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H3ActionPerformed(evt);
            }
        });

        H2.setBackground(new java.awt.Color(128, 65, 2));
        H2.setBorder(new javax.swing.border.MatteBorder(null));
        H2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H2ActionPerformed(evt);
            }
        });

        H1.setBackground(new java.awt.Color(198, 134, 66));
        H1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CaballoRojo.png"))); // NOI18N
        H1.setBorder(new javax.swing.border.MatteBorder(null));
        H1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                H1ActionPerformed(evt);
            }
        });

        I1.setBackground(new java.awt.Color(128, 65, 2));
        I1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TorreRoja.png"))); // NOI18N
        I1.setBorder(new javax.swing.border.MatteBorder(null));
        I1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I1ActionPerformed(evt);
            }
        });

        I2.setBackground(new java.awt.Color(198, 134, 66));
        I2.setBorder(new javax.swing.border.MatteBorder(null));
        I2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I2ActionPerformed(evt);
            }
        });

        I3.setBackground(new java.awt.Color(128, 65, 2));
        I3.setBorder(new javax.swing.border.MatteBorder(null));
        I3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I3ActionPerformed(evt);
            }
        });

        I4.setBackground(new java.awt.Color(198, 134, 66));
        I4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/SoldadoRojo.png"))); // NOI18N
        I4.setBorder(new javax.swing.border.MatteBorder(null));
        I4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                I4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(A1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(D1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(F1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(G1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(H1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(I1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(A2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(F2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(G2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(H2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(I2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(A3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(D3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(E3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(F3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(G3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(H3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(I3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(A4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(D4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(E4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(F4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(G4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(H4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(I4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(A5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(D5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(E5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(F5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(G5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(H5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(I5, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(A6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(D6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(E6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(F6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(G6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(H6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(I6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(A7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(C7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(D7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(E7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(F7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(G7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(H7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(I7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(A8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(C8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(D8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(E8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(F8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(G8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(H8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(I8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(A9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(C9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(D9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(E9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(F9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(G9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(H9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(I9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(A10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(C10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(D10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(E10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(F10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(G10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(H10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(I10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A10, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A9, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A8, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A7, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A4, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(H1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(I1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(G1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(E1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(F1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(D1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(B1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(C1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(A1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        JugadorNegro.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        JugadorNegro.setForeground(new java.awt.Color(0, 0, 0));
        JugadorNegro.setText("Jugador Negro: P2");

        JugadorRojo.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        JugadorRojo.setForeground(new java.awt.Color(153, 0, 0));
        JugadorRojo.setText("Jugador Rojo: P1");

        BtnRendirse.setText("Rendirse");
        BtnRendirse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnRendirseMouseClicked(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(128, 65, 2));
        jLabel1.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Turno: ");
        jLabel1.setOpaque(true);

        lblTurno.setBackground(new java.awt.Color(128, 65, 2));
        lblTurno.setFont(new java.awt.Font("SansSerif", 3, 18)); // NOI18N
        lblTurno.setForeground(new java.awt.Color(255, 204, 0));
        lblTurno.setText("COLOR ");
        lblTurno.setOpaque(true);

        pruebalbl.setText("prueba");
        pruebalbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pruebalblActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JugadorRojo, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JugadorNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(BtnRendirse, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                .addComponent(lblTurno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(pruebalbl))
                        .addGap(24, 24, 24))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(JugadorNegro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BtnRendirse, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTurno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(pruebalbl)))
                .addGap(18, 18, 18)
                .addComponent(JugadorRojo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void E1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E1ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();            

            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E1ActionPerformed

    private void BtnRendirseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnRendirseMouseClicked
        // TODO add your handling code here:
        if (lblTurno.getText().equals("Rojo")) {

            int confirmar = JOptionPane.showConfirmDialog(null, mas.UsuarioActual.getUser() + "\n¬øEstas Seguro que Quieres Rendirte? \nEsto hara que pierdas la Partida", "Atencion", JOptionPane.OK_CANCEL_OPTION);
            if (confirmar == 0) {
                VictoriaNegra();
            }
        } else {
            if (lblTurno.getText().equals("Negro")) {

                int confirmar = JOptionPane.showConfirmDialog(null, mas.UsuarioRival.getUser() + "\n¬øEstas Seguro que Quieres Rendirte? \nEsto hara que pierdas la Partida", "Atencion", JOptionPane.OK_CANCEL_OPTION);
                if (confirmar == 0) {
                    VictoriaRoja();
                }
            }
        }
        
    }//GEN-LAST:event_BtnRendirseMouseClicked

    private void pruebalblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pruebalblActionPerformed
        // TODO add your handling code here:
         Cambiarlbl();
    }//GEN-LAST:event_pruebalblActionPerformed

    private void A1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A1ActionPerformed
        // TODO add your handling code here:
        int X = 0;
        int Y = 0;

        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A1ActionPerformed

    private void A2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A2ActionPerformed
        // TODO add your handling code here:
        int X = 0;
        int Y = 1;

        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A2ActionPerformed

    private void A3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A3ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=2;
            if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A3ActionPerformed

    private void A4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A4ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A4ActionPerformed

    private void A5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A5ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A5ActionPerformed

    private void A6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A6ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A6ActionPerformed

    private void A7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A7ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A7ActionPerformed

    private void A8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A8ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=7;
        if (primerClick) {
            boolean SePuede=moverPieza(xInicial,yInicial,X,Y);
            if (SePuede) {
                A8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick=false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A8ActionPerformed

    private void A9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A9ActionPerformed
        // TODO add your handling code here:
        int X=0;
        int Y=8;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A9ActionPerformed

    private void A10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_A10ActionPerformed
        // TODO add your handling code here:
        int X = 0;
        int Y = 9;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                A10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = A10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_A10ActionPerformed

    private void B1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B1ActionPerformed
        // TODO add your handling code here:
        int X = 1;
        int Y = 0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }

    }//GEN-LAST:event_B1ActionPerformed

    private void B2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B2ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=1;
        
                if (primerClick) {
            boolean SePuede=moverPieza(xInicial,yInicial,X,Y);
            if (SePuede) {
                B2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick=false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B2ActionPerformed

    private void B3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B3ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=2;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B3ActionPerformed

    private void B4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B4ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=3;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B4ActionPerformed

    private void B5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B5ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=4;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B5ActionPerformed

    private void B6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B6ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=5;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B6ActionPerformed

    private void B7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B7ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=6;
                if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B7ActionPerformed

    private void B8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B8ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B8ActionPerformed

    private void B9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B9ActionPerformed
        // TODO add your handling code here:
        int X = 1;
        int Y = 8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B9ActionPerformed

    private void B10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B10ActionPerformed
        // TODO add your handling code here:
        int X=1;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                B10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = B10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_B10ActionPerformed

    private void C1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C1ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C1ActionPerformed

    private void C2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C2ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C2ActionPerformed

    private void C3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C3ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C3ActionPerformed

    private void C4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C4ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C4ActionPerformed

    private void C5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C5ActionPerformed
        // TODO add your handling code here
        int X=2;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C5ActionPerformed

    private void C6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C6ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C6ActionPerformed

    private void C7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C7ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C7ActionPerformed

    private void C8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C8ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C8ActionPerformed

    private void C9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C9ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C9ActionPerformed

    private void C10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C10ActionPerformed
        // TODO add your handling code here:
        int X=2;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                C10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = C10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_C10ActionPerformed

    private void D1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D1ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D1ActionPerformed

    private void D2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D2ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D2ActionPerformed

    private void D3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D3ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D3ActionPerformed

    private void D4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D4ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D4ActionPerformed

    private void D5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D5ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D5ActionPerformed

    private void D6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D6ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D6ActionPerformed

    private void D7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D7ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D7ActionPerformed

    private void D8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D8ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D8ActionPerformed

    private void D9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D9ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D9ActionPerformed

    private void D10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_D10ActionPerformed
        // TODO add your handling code here:
        int X=3;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                D10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = D10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_D10ActionPerformed

    private void E2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E2ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E2ActionPerformed

    private void E3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E3ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E3ActionPerformed

    private void E4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E4ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E4ActionPerformed

    private void E5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E5ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E5ActionPerformed

    private void E6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E6ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E6ActionPerformed

    private void E7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E7ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E7ActionPerformed

    private void E8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E8ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E8ActionPerformed

    private void E9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E9ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E9ActionPerformed

    private void E10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_E10ActionPerformed
        // TODO add your handling code here:
        int X=4;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                E10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = E10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_E10ActionPerformed

    private void F1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F1ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F1ActionPerformed

    private void F2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F2ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F2ActionPerformed

    private void F3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F3ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F3ActionPerformed

    private void F4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F4ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F4ActionPerformed

    private void F5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F5ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F5ActionPerformed

    private void F6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F6ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F6ActionPerformed

    private void F7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F7ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F7ActionPerformed

    private void F8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F8ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F8ActionPerformed

    private void F9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F9ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F9ActionPerformed

    private void F10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F10ActionPerformed
        // TODO add your handling code here:
        int X=5;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                F10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = F10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_F10ActionPerformed

    private void G1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G1ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G1ActionPerformed

    private void G2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G2ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G2ActionPerformed

    private void G3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G3ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G3ActionPerformed

    private void G4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G4ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G4ActionPerformed

    private void G5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G5ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G5ActionPerformed

    private void G6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G6ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G6ActionPerformed

    private void G7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G7ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G7ActionPerformed

    private void G8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G8ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G8ActionPerformed

    private void G9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G9ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G9ActionPerformed

    private void G10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_G10ActionPerformed
        // TODO add your handling code here:
        int X=6;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                G10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = G10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_G10ActionPerformed

    private void H1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H1ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H1ActionPerformed

    private void H2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H2ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H2ActionPerformed

    private void H3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H3ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H3ActionPerformed

    private void H4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H4ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H4ActionPerformed

    private void H5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H5ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H5ActionPerformed

    private void H6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H6ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H6ActionPerformed

    private void H7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H7ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H7ActionPerformed

    private void H8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H8ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H8ActionPerformed

    private void H9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H9ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H9ActionPerformed

    private void H10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_H10ActionPerformed
        // TODO add your handling code here:
        int X=7;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                H10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = H10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_H10ActionPerformed

    private void I1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I1ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=0;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I1.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I1;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I1ActionPerformed

    private void I2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I2ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=1;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I2.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I2;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I2ActionPerformed

    private void I3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I3ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=2;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I3.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I3;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I3ActionPerformed

    private void I4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I4ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=3;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I4.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I4;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I4ActionPerformed

    private void I5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I5ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=4;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I5.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I5;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I5ActionPerformed

    private void I6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I6ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=5;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I6.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I6;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I6ActionPerformed

    private void I7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I7ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=6;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I7.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I7;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I7ActionPerformed

    private void I8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I8ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=7;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I8.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I8;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I8ActionPerformed

    private void I9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I9ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=8;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I9.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I9;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I9ActionPerformed

    private void I10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_I10ActionPerformed
        // TODO add your handling code here:
        int X=8;
        int Y=9;
        if (primerClick) {
            boolean SePuede = moverPieza(xInicial, yInicial, X, Y);
            if (SePuede) {
                I10.setIcon(Boton1.getIcon());
                Boton1.setIcon(null);
            }
            primerClick = false;
        } else {
            if (tablero[Y][X] != null) {
                Boton1 = I10;
                xInicial = X;
                yInicial = Y;
                primerClick = true;
                VerificarRey();
            } else {
                JOptionPane.showMessageDialog(this, "Selecciona una posici√≥n con una pieza.");
            }
        }
    }//GEN-LAST:event_I10ActionPerformed


    public void Cambiarlbl(){
        if (lblTurno.getText().equals("Rojo")) {
            lblTurno.setText("Negro");
            lblTurno.setForeground(Color.BLACK);
        } else{
           lblTurno.setText("Rojo"); 
           lblTurno.setForeground(Color.RED);
        }
    }
    

    
public void VerificarRey() {
    boolean reyRojoPresente = false;
    boolean reyNegroPresente = false;

    for (int y = 0; y < tablero.length; y++) {
        for (int x = 0; x < tablero[y].length; x++) {
            Piezas pieza = tablero[y][x];

            if (pieza instanceof Rey && pieza.Color() == true) { 
                reyRojoPresente = true;
            }

            if (pieza instanceof Rey && pieza.Color() == false) { 
                reyNegroPresente = true;
            }
        }
    }

    if (!reyRojoPresente) {
        VictoriaNegra();
    } else if (!reyNegroPresente) {
        VictoriaRoja();
    }
}
    
    
    
    public void inicarTablero(){
 // Piezas del jugador rojo
    tablero[0][0] = new Torre(0, 0, true);
    tablero[0][1] = new Caballo(0, 1, true);
    tablero[0][2] = new Elefante(0, 2, true);
    tablero[0][3] = new Oficial(0, 3, true);
    tablero[0][4] = new Rey(0, 4, true);
    tablero[0][5] = new Oficial(0, 5, true);
    tablero[0][6] = new Elefante(0, 6, true);
    tablero[0][7] = new Caballo(0, 7, true);
    tablero[0][8] = new Torre(0, 8, true);
    
    tablero[2][1] = new Ca√±on(2, 1, true);
    tablero[2][7] = new Ca√±on(2, 7, true);
    
    tablero[3][0] = new Peon(3, 0, true);
    tablero[3][2] = new Peon(3, 2, true);
    tablero[3][4] = new Peon(3, 4, true);
    tablero[3][6] = new Peon(3, 6, true);
    tablero[3][8] = new Peon(3, 8, true);
    
    // Piezas del jugador negro
    tablero[9][0] = new Torre(9, 0, false);
    tablero[9][1] = new Caballo(9, 1, false);
    tablero[9][2] = new Elefante(9, 2, false);
    tablero[9][3] = new Oficial(9, 3, false);
    tablero[9][4] = new Rey(9, 4, false);
    tablero[9][5] = new Oficial(9, 5, false);
    tablero[9][6] = new Elefante(9, 6, false);
    tablero[9][7] = new Caballo(9, 7, false);
    tablero[9][8] = new Torre(9, 8, false);
    
    tablero[7][1] = new Ca√±on(7, 1, false);
    tablero[7][7] = new Ca√±on(7, 7, false);
    
    tablero[6][0] = new Peon(6, 0, false);
    tablero[6][2] = new Peon(6, 2, false);
    tablero[6][4] = new Peon(6, 4, false);
    tablero[6][6] = new Peon(6, 6, false);
    tablero[6][8] = new Peon(6, 8, false);
    }
    
    
    
    public boolean moverPieza(int xInicial, int yInicial, int xFinal, int yFinal) {
        Piezas pieza = tablero[yInicial][xInicial];

        if (pieza == null) {
            JOptionPane.showMessageDialog(this, "No hay una pieza en esta posici√≥n.");
            return false;
        }

        String colorTurno = lblTurno.getText();
        if ((colorTurno.equals("Rojo") && !pieza.Color()) || (colorTurno.equals("Negro") && pieza.Color())) {
            JOptionPane.showMessageDialog(this, "No es tu turno para mover esta pieza.");
            return false;
        }

        Piezas destino = tablero[yFinal][xFinal];
        if (destino != null && destino.Color() == pieza.Color()) {
            JOptionPane.showMessageDialog(this, "No puedes moverte a una casilla ocupada por una pieza del mismo color.");
            return false;
        }

        if (pieza.mover(xInicial,yInicial,xFinal, yFinal)) {
            tablero[yFinal][xFinal] = pieza;
            tablero[yInicial][xInicial] = null;
            pieza.xPos = xFinal;
            pieza.yPos = yFinal;
            Cambiarlbl();
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "Movimiento inv√°lido para esta pieza.");
            return false;
        }
    }

    public void VictoriaRoja() {
        JOptionPane.showMessageDialog(null, "Victoria de " + mas.UsuarioActual.getUser() + "\n Has ganado 3 Puntos");
        mas.UsuarioActual.Victoria();
        mas.agregarPartida(mas.UsuarioActual.getUser(), mas.UsuarioRival.getUser(), mas.UsuarioActual.getUser());
        new MainMenu(mas).setVisible(true);
        setLocationRelativeTo(null);
        this.dispose();
    }

    public void VictoriaNegra() {
        JOptionPane.showMessageDialog(null, "Victoria de " + mas.UsuarioRival.getUser() + "\n Has ganado 3 Puntos");
        mas.UsuarioRival.Victoria();
        mas.agregarPartida(mas.UsuarioActual.getUser(), mas.UsuarioRival.getUser(), mas.UsuarioRival.getUser());
        new MainMenu(mas).setVisible(true);
        setLocationRelativeTo(null);
        this.dispose();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Tablero_Xiangqi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Tablero_Xiangqi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Tablero_Xiangqi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Tablero_Xiangqi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton A1;
    private javax.swing.JButton A10;
    private javax.swing.JButton A2;
    private javax.swing.JButton A3;
    private javax.swing.JButton A4;
    private javax.swing.JButton A5;
    private javax.swing.JButton A6;
    private javax.swing.JButton A7;
    private javax.swing.JButton A8;
    private javax.swing.JButton A9;
    private javax.swing.JButton B1;
    private javax.swing.JButton B10;
    private javax.swing.JButton B2;
    private javax.swing.JButton B3;
    private javax.swing.JButton B4;
    private javax.swing.JButton B5;
    private javax.swing.JButton B6;
    private javax.swing.JButton B7;
    private javax.swing.JButton B8;
    private javax.swing.JButton B9;
    private javax.swing.JButton BtnRendirse;
    private javax.swing.JButton C1;
    private javax.swing.JButton C10;
    private javax.swing.JButton C2;
    private javax.swing.JButton C3;
    private javax.swing.JButton C4;
    private javax.swing.JButton C5;
    private javax.swing.JButton C6;
    private javax.swing.JButton C7;
    private javax.swing.JButton C8;
    private javax.swing.JButton C9;
    private javax.swing.JButton D1;
    private javax.swing.JButton D10;
    private javax.swing.JButton D2;
    private javax.swing.JButton D3;
    private javax.swing.JButton D4;
    private javax.swing.JButton D5;
    private javax.swing.JButton D6;
    private javax.swing.JButton D7;
    private javax.swing.JButton D8;
    private javax.swing.JButton D9;
    private javax.swing.JButton E1;
    private javax.swing.JButton E10;
    private javax.swing.JButton E2;
    private javax.swing.JButton E3;
    private javax.swing.JButton E4;
    private javax.swing.JButton E5;
    private javax.swing.JButton E6;
    private javax.swing.JButton E7;
    private javax.swing.JButton E8;
    private javax.swing.JButton E9;
    private javax.swing.JButton F1;
    private javax.swing.JButton F10;
    private javax.swing.JButton F2;
    private javax.swing.JButton F3;
    private javax.swing.JButton F4;
    private javax.swing.JButton F5;
    private javax.swing.JButton F6;
    private javax.swing.JButton F7;
    private javax.swing.JButton F8;
    private javax.swing.JButton F9;
    private javax.swing.JButton G1;
    private javax.swing.JButton G10;
    private javax.swing.JButton G2;
    private javax.swing.JButton G3;
    private javax.swing.JButton G4;
    private javax.swing.JButton G5;
    private javax.swing.JButton G6;
    private javax.swing.JButton G7;
    private javax.swing.JButton G8;
    private javax.swing.JButton G9;
    private javax.swing.JButton H1;
    private javax.swing.JButton H10;
    private javax.swing.JButton H2;
    private javax.swing.JButton H3;
    private javax.swing.JButton H4;
    private javax.swing.JButton H5;
    private javax.swing.JButton H6;
    private javax.swing.JButton H7;
    private javax.swing.JButton H8;
    private javax.swing.JButton H9;
    private javax.swing.JButton I1;
    private javax.swing.JButton I10;
    private javax.swing.JButton I2;
    private javax.swing.JButton I3;
    private javax.swing.JButton I4;
    private javax.swing.JButton I5;
    private javax.swing.JButton I6;
    private javax.swing.JButton I7;
    private javax.swing.JButton I8;
    private javax.swing.JButton I9;
    private javax.swing.JLabel JugadorNegro;
    private javax.swing.JLabel JugadorRojo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblTurno;
    private javax.swing.JButton pruebalbl;
    // End of variables declaration//GEN-END:variables
}
